services:
  db:
    container_name: mysql-container
    image: mysql:8.0
    restart: always
    command: mysqld --default-authentication-plugin=mysql_native_password
    volumes:
      - ./mysql:/var/lib/mysql
    env_file:
      - ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=${SQL_ROOT_PASSWORD}
      - MYSQL_USER=${SQL_USER}
      - MYSQL_PASSWORD=${SQL_PASSWORD}
      - MYSQL_DATABASE=${SQL_DATABASE}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 3306:3306
    networks:
      - app-network

  backend:
    container_name: django-web
    build:
      context: ./ # Đường dẫn đến thư mục backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app/
    env_file:
      - ./.env
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  nextjs:
    container_name: nextjs-web
    build:
      context: ../nail-fe # Đường dẫn đến thư mục chứa Next.js
      dockerfile: Dockerfile # Dockerfile của Next.js
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    volumes:
      - ../nail-fe:/usr/src/app
    ports:
      - 3000:3000
    depends_on:
      - backend # Phụ thuộc vào Django
    networks:
      - app-network

  admin:
    build:
      context: ../nail-admin
      dockerfile: Dockerfile
    restart: always
    expose:
      - "3000"
  nginx:
    container_name: nginx-server
    image: nginx:latest
    ports:
      - 80:80 # Expose Nginx trên cổng 80
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - nextjs
      - admin
      - backend
    networks:
      - app-network

volumes:
  mysql-data:
networks:
  app-network:
